{
  "version": 3,
  "sources": ["../src/slider-simplex.ts"],
  "sourcesContent": ["/**\n * Slider Simplex - Show\n *\n * @author Takuto Yanagida\n * @version 2022-11-04\n */\n\nimport { Slide } from './_class-slide';\nimport { asyncTimeout, initViewportDetection, onLoad, initResizeEventHandler, onResize } from './_common';\nimport { initButtons } from './_part-button';\nimport { initRivets, transitionRivets } from './_part-rivet';\nimport { initIndicators, transitionIndicators } from './_part-indicator';\nimport { initThumbnails, transitionThumbnails } from './_part-thumbnail.js';\nimport { initBackgrounds, transitionBackgrounds } from './_part-background.js';\n\nimport { Transition } from './_transition';\nimport { TransitionFade } from './_transition-fade';\nimport { TransitionSlide } from './_transition-slide';\nimport { TransitionScroll } from './_transition-scroll';\n\nconst NS          = 'slider-simplex';\nconst CLS_FRAME   = NS + '-frame';\nconst CLS_SLIDES  = NS + '-slides';\nconst CLS_START   = 'start';\nconst CLS_VIEW    = 'view';\nconst CLS_PAUSE   = 'pause';\nconst CLS_SCROLL  = 'scroll';\nconst OFFSET_VIEW = 100;\n\ninterface SliderOptions {\n\tis_show?           : boolean;\n\teffect_type?       : string;\n\tduration_time?     : number;\n\ttransition_time?   : number;\n\trandom_timing?     : boolean;\n\tbackground_visible?: boolean;\n\tside_slide_visible?: boolean;\n}\n\nexport function slider_show(id: string, opts: SliderOptions = {}) {\n\tconst root: HTMLElement = id ? document.getElementById(id) as HTMLElement : document.getElementsByClassName(NS)[0] as HTMLElement;\n\tif (!root) return;\n\n\tconst isShow: boolean = opts?.is_show ?? true;\n\n\tconst effectType  : string  = opts?.effect_type     ?? 'slide';  // 'scroll' or 'fade'\n\tconst timeDur     : number  = opts?.duration_time   ?? 8;  // [second]\n\tconst timeTran    : number  = opts?.transition_time ?? 1;  // [second]\n\tconst randomTiming: boolean = opts?.random_timing   ?? false;\n\n\tlet bgVisible: boolean = false;\n\tlet sideVisible: boolean = false;\n\tif (isShow) {\n\t\tbgVisible      = opts?.background_visible ?? true;\n\t\tsideVisible    = opts?.side_slide_visible ?? false;\n\n\t\troot.style.setProperty('--transition-time', `${timeTran}s`);\n\n\t\tif (effectType !== 'scroll') sideVisible = false;\n\t\tif (sideVisible) {\n\t\t\tbgVisible = false;\n\t\t\tconst ss = root.querySelector('.' + CLS_SLIDES) as HTMLElement;\n\t\t\tss.style.overflow = 'visible';\n\t\t}\n\t}\n\n\tconst lis: HTMLLIElement[] = Array.prototype.slice.call(root.querySelectorAll(`.${CLS_SLIDES} > li`));\n\tconst size: number = lis.length;\n\tconst sss: Slide[] = [];\n\tlet effect!: Transition;\n\n\tlet onTransitionEnd: (() => void) | null = null;\n\n\n\t// -------------------------------------------------------------------------\n\n\n\tconst hasVideo = initSlides();\n\tif (isShow) {\n\t\tif (bgVisible) initBackgrounds(size, root, lis);\n\t}\n\tif (hasVideo) setTimeout(tryResizeVideo, 100);\n\tfunction tryResizeVideo() {\n\t\tconst finish = onResizeSlide();\n\t\tif (!finish) setTimeout(tryResizeVideo, 100);\n\t}\n\tif (isShow) {\n\t\tconst frame = root.getElementsByClassName(CLS_FRAME)[0] as HTMLElement;\n\t\tif (0 < navigator.maxTouchPoints) {\n\t\t\tframe.addEventListener('pointerenter', (e: PointerEvent): void => {\n\t\t\t\tconst m = (e.pointerType === 'mouse') ? 'remove' : 'add';\n\t\t\t\tframe.classList[m]('touch');\n\t\t\t}, { once: true });\n\t\t}\n\t}\n\tonLoad(() => {\n\t\tinitResizeEventHandler();\n\t\tif (isShow) {\n\t\t\tinitButtons(timeTran, size, root, transition);\n\t\t\tinitThumbnails(id, size);\n\t\t\tinitIndicators(size, root);\n\t\t\tinitRivets(id, size, root, transition);\n\t\t}\n\t\tinitViewportDetection(root, CLS_VIEW, OFFSET_VIEW);\n\n\t\ttransition(0, 0);\n\t\tconsole.log(`Slider Simplex - Show (#${id}): started`);\n\t\tsetTimeout(() => root.classList.add(CLS_START), 0);\n\t});\n\n\n\t// -------------------------------------------------------------------------\n\n\n\tfunction initSlides() {\n\t\tif (isShow) {\n\t\t\tif (effectType === 'scroll' && 1 < size && size < 5) {\n\t\t\t\tcloneLis();\n\t\t\t\tif (size === 2) cloneLis();\n\t\t\t}\n\t\t}\n\t\tconst isScroll = root.classList.contains(CLS_SCROLL);\n\t\tlet hasVideo = false;\n\n\t\tfor (let i = 0; i < lis.length; i += 1) {\n\t\t\tif (isScroll) lis[i].classList.add(CLS_SCROLL);\n\n\t\t\tconst ss = new Slide(lis[i], i);\n\t\t\tif ('video' === ss.getType()) hasVideo = true;\n\t\t\tsss.push(ss);\n\t\t}\n\t\tonResize(onResizeSlide, true);\n\t\tswitch (effectType) {\n\t\t\tcase 'slide' : effect = new TransitionSlide(size, lis, timeTran); break;\n\t\t\tcase 'scroll': effect = new TransitionScroll(size, lis, timeTran); break;\n\t\t\tcase 'fade'  : effect = new TransitionFade(size, lis, timeTran); break;\n\t\t\tdefault      : effect = new TransitionSlide(size, lis, timeTran); break;\n\t\t}\n\t\treturn hasVideo;\n\t}\n\n\tfunction onResizeSlide() {\n\t\tlet finish = true;\n\t\tfor (const ss of sss) {\n\t\t\tif (!ss.onResize()) finish = false;\n\t\t}\n\t\treturn finish;\n\t}\n\n\tfunction cloneLis() {\n\t\tfor (let i = 0; i < size; i += 1) {\n\t\t\tconst li: HTMLLIElement = lis[i];\n\t\t\tconst nls = li.cloneNode(true) as HTMLLIElement;\n\t\t\tlis.push(nls);\n\t\t\tli.parentNode?.appendChild(nls);\n\t\t}\n\t}\n\n\n\t// -------------------------------------------------------------------------\n\n\n\tlet curIdx   : number        = 0;\n\tlet stStep   : { set: () => Promise<void>, clear: () => void } | null = null;\n\tlet last     : number        = 0;\n\tlet stReserve: number | null = null;\n\n\tasync function transition(idx: number | null, dir: number): Promise<void> {\n\t\t[idx, dir] = getIdxDir(idx, dir);\n\n\t\tconst t = window.performance.now();\n\t\tif (dir !== 0 && t - last < timeTran * 1000) {\n\t\t\tif (stReserve) clearTimeout(stReserve);\n\t\t\tstReserve = setTimeout(() => transition(idx, dir), timeTran * 1000 - (t - last));\n\t\t\treturn;\n\t\t}\n\t\tlast = t;\n\n\t\tfor (const ss of sss) ss.onPreDisplay(idx, size);\n\t\tfor (const ss of sss) ss.transition(idx, size);\n\t\tif (isShow) {\n\t\t\ttransitionBackgrounds(idx, size);\n\t\t\ttransitionThumbnails(idx);\n\t\t\ttransitionIndicators(idx);\n\t\t\ttransitionRivets(idx);\n\t\t}\n\t\tawait effect.transition(idx, dir);\n\t\tif (onTransitionEnd) onTransitionEnd();\n\t\tcurIdx = idx;\n\t\tdisplay(idx);\n\t}\n\n\tasync function display(idx: number) {\n\t\tfor (const ss of sss) ss.display(idx, size);\n\t\tif (size === 1) return;\n\n\t\tconst dt = sss[idx].getDuration(timeDur, timeTran, randomTiming);\n\t\tif (stStep) stStep.clear();\n\t\tstStep = asyncTimeout(Math.ceil(dt * 1000), step);\n\t\tawait stStep.set();\n\t}\n\n\tasync function step() {\n\t\tif (root.classList.contains(CLS_VIEW) && !root.classList.contains(CLS_PAUSE)) {\n\t\t\ttransition(null, 1);\n\t\t} else {\n\t\t\tasyncTimeout(timeDur * 1000, step).set();\n\t\t}\n\t}\n\n\tfunction getIdxDir(idx: number | null, dir: number) {\n\t\tif (idx === null) {\n\t\t\tidx = curIdx + dir;\n\t\t\tif (size - 1 < idx) idx = 0;\n\t\t\tif (idx < 0) idx = size - 1;\n\t\t} else if (dir === 0 && curIdx !== idx) {\n\t\t\tconst r = (curIdx < idx) ? idx - curIdx : idx + size - curIdx;\n\t\t\tconst l = (idx < curIdx) ? curIdx - idx : curIdx + size - idx;\n\t\t\tdir = (l < r) ? -1 : 1;\n\t\t}\n\t\treturn [idx, dir];\n\t}\n\n\n\t// -------------------------------------------------------------------------\n\n\n\tconst fs = {\n\t\tmove: (idx: number) => transition(idx, size === 2 ? 1 : 0),\n\t\tnext: ()  => transition((curIdx === size - 1) ? 0          : (curIdx + 1),  1),\n\t\tprev: ()  => transition((curIdx === 0       ) ? (size - 1) : (curIdx - 1), -1),\n\n\t\tonTransitionEnd: (fn: () => void): void => { onTransitionEnd = fn; }\n\t};\n\treturn fs;\n\n}\n"],
  "mappings": "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",
  "names": ["Slide", "asyncTimeout", "initViewportDetection", "onLoad", "initResizeEventHandler", "onResize", "initButtons", "initRivets", "transitionRivets", "initIndicators", "transitionIndicators", "initThumbnails", "transitionThumbnails", "initBackgrounds", "transitionBackgrounds", "TransitionFade", "TransitionSlide", "TransitionScroll", "NS", "CLS_FRAME", "CLS_SLIDES", "CLS_START", "CLS_VIEW", "CLS_PAUSE", "CLS_SCROLL", "OFFSET_VIEW", "id", "opts", "root", "isShow", "effectType", "timeDur", "timeTran", "randomTiming", "bgVisible", "sideVisible", "ss", "lis", "size", "sss", "effect", "onTransitionEnd", "hasVideo", "initSlides", "tryResizeVideo", "onResizeSlide", "frame", "e", "m", "transition", "cloneLis", "isScroll", "i", "finish", "li", "nls", "curIdx", "stStep", "last", "stReserve", "idx", "dir", "getIdxDir", "t", "display", "dt", "step", "r", "fn"]
}
