"use strict";import{getStylePropertyBool as n,getStylePropertyFloat as r,getStylePropertyString as c}from"./custom-property";import{repeatUntil as m,detectTouch as u,asyncTimeout as h,initializeViewportDetection as f,callAfterDocumentReady as d}from"./common";import{Background as p}from"./part-background.js";import{Navigation as T}from"./part-navigation";import{Pagination as b}from"./part-pagination";import{Indicator as S}from"./part-indicator";import{Selector as I}from"./part-selector.js";import{Slide as v}from"./slide";import{TransitionFade as g,TransitionSlide as E,TransitionScroll as L}from"./transition";const P="slider-simplex",y="slides",w="start",l="view",C="pause",a="scroll",_=100,R="--effect-type",A="--duration-time",N="--transition-time",M="--randomize-timing",D="--show-background",H="--show-side-slide",O="--create-navigation",z="--create-pagination",k="--create-selector";export class SliderSimplex{static create(t){if(t){const i=document.getElementById(t);if(i)return new SliderSimplex(i)}else for(const i of document.getElementsByClassName(P))new SliderSimplex(i);return null}#t;#r;#h;#n;#f;#d;#p;#T;#b;#S;#s;#i;#e=[];#o;#l=null;#a=null;#c=null;#m=null;#u=null;curIdx=0;stStep=null;lastTime=0;stReserve=null;constructor(t){this.#t=t,this.#r=c(this.#t,R,"fade"),this.#h=r(this.#t,A,8),this.#n=r(this.#t,N,1),this.#f=n(this.#t,M),this.#d=n(this.#t,D,!1),this.#p=n(this.#t,H,!1),this.#T=n(this.#t,O),this.#b=n(this.#t,z),this.#S=n(this.#t,k);const i=this.#t.querySelector("."+y);this.#s=Array.from(i.getElementsByTagName("li")),this.#i=this.#s.length,this.#d&&(this.#u=new p(this.#t,this.#s)),this.#p&&(i.style.overflow="visible"),this.initSlides()&&m(100,()=>this.onResizeSlide()),u(this.#t),f(this.#t,l,_),d(()=>this.onLoad())}getController(){return{move:i=>this.transition(i,this.#i===2?1:0),next:()=>this.transition(this.curIdx===this.#i-1?0:this.curIdx+1,1),prev:()=>this.transition(this.curIdx===0?this.#i-1:this.curIdx-1,-1),onTransitionEnd:i=>{this.#l=i}}}initSlides(){this.#r==="scroll"&&1<this.#i&&this.#i<5&&(this.cloneLis(),this.#i===2&&this.cloneLis());const t=this.#t.classList.contains(a);let i=!1;for(const e of this.#s){t&&e.classList.add(a);const o=new v(e);o.getType()==="video"&&(i=!0),this.#e.push(o)}switch(new ResizeObserver(()=>this.onResizeSlide()).observe(this.#t),this.#r){case"scroll":this.#o=new L(this.#i,this.#s,this.#n);break;case"slide":this.#o=new E(this.#i,this.#s,this.#n);break;case"fade":default:this.#o=new g(this.#i,this.#s,this.#n);break}return i}cloneLis(){for(let t=0;t<this.#i;t+=1){const i=this.#s[t],s=this.#s[t].cloneNode(!0);this.#s.push(s),i.parentNode?.appendChild(s)}}onResizeSlide(){let t=!0;for(const i of this.#e)i.onResize()||(t=!1);return t}onLoad(){if(1<this.#i){const t=(i,s)=>this.transition(i,s);new T(this.#t,this.#n,t,this.#T),this.#m=new b(this.#t,this.#i,t,this.#b),this.#a=new I(this.#t,this.#s,this.#i,t,this.#S)}this.#c=new S(this.#t,this.#i),this.transition(0,0),setTimeout(()=>this.#t.classList.add(w),200),console.log(`Slider Simplex (#${this.#t.id}): started`)}async transition(t,i){[t,i]=this.getIdxDir(t,i);const s=window.performance.now();if(i!==0&&s-this.lastTime<this.#n*1e3){this.stReserve&&clearTimeout(this.stReserve);const e=this.#n*1e3-(s-this.lastTime);this.stReserve=setTimeout(()=>this.transition(t,i),e);return}this.lastTime=s;for(let e=0;e<this.#e.length;e+=1)this.#e[e].onPreDisplay(e%this.#i===t);for(let e=0;e<this.#e.length;e+=1)this.#e[e].transition(e%this.#i===t,this.#i);this.#u&&this.#u.transition(t),this.#m&&this.#m.transition(t),this.#c&&this.#c.transition(t),this.#a&&this.#a.transition(t),await this.#o.transition(t,i),this.#l&&this.#l(),this.curIdx=t,this.display(t)}async display(t){for(let s=0;s<this.#e.length;s+=1)this.#e[s].display(s%this.#i===t);if(this.#i===1)return;const i=this.#e[t].getDuration(this.#h,this.#n,this.#f);this.stStep&&this.stStep.clear(),this.stStep=h(Math.ceil(i*1e3),()=>this.step()),await this.stStep.set()}async step(){this.#t.classList.contains(l)&&!this.#t.classList.contains(C)?this.transition(-1,1):h(this.#h*1e3,()=>this.step()).set()}getIdxDir(t,i){if(t===-1)t=this.curIdx+i,this.#i-1<t&&(t=0),t<0&&(t=this.#i-1);else if(i===0&&this.curIdx!==t){const s=this.curIdx<t?t-this.curIdx:t+this.#i-this.curIdx;i=(t<this.curIdx?this.curIdx-t:this.curIdx+this.#i-t)<s?-1:1}return[t,i]}}
//# sourceMappingURL=slider-simplex.min.js.map
